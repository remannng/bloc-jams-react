{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/@skpm/fs/index.js","webpack://exports/./node_modules/@skpm/timers/immediate.js","webpack://exports/./node_modules/@skpm/timers/test-if-fiber.js","webpack://exports/./node_modules/@skpm/timers/timeout.js","webpack://exports/./node_modules/cocoascript-class/lib/index.js","webpack://exports/./node_modules/cocoascript-class/lib/runtime.js","webpack://exports/./node_modules/promise-polyfill/lib/index.js","webpack://exports/./node_modules/sketch-polyfill-fetch/lib/index.js","webpack://exports/./src/DataProvider.js","webpack://exports/external \"buffer\"","webpack://exports/external \"os\"","webpack://exports/external \"path\"","webpack://exports/external \"sketch\"","webpack://exports/external \"util\""],"names":["os","require","path","util","fs","sketch","API_KEY","API_ENDPOINT","collectionId","apiOptions","DataSupplier","UI","Settings","SETTING_KEY","FOLDER","join","tmpdir","onStartup","registerDataSupplier","onShutdown","deregisterDataSuppliers","existsSync","rmdirSync","err","console","error","onSupplyRandomPhoto","context","setImageForContext","containsPhotoId","searchTerm","substr","indexOf","extractPhotoId","photoId","artifactLocation","search","onSearchPhoto","getStringFromUser","trim","replace","toLowerCase","onImageDetails","selectedDocument","getSelectedDocument","selection","selectedLayers","length","forEach","element","id","layerSettingForKey","type","overrides","map","o","find","s","NSWorkspace","sharedWorkspace","openURL","NSURL","URLWithString","message","params","dataKey","data","key","items","toArray","fromNative","item","index","setImageFor","layer","Shape","sketchObject","symbolInstance","orientation","frame","width","height","action","url","fetch","then","response","json","errors","Promise","reject","process","catch","e","getImageFromURL","urls","regular","imagePath","supplyDataAtIndex","setLayerSettingForKey","downloadLocation","links","download_location","user","name","res","blob","saveTempFileFromImageData","plugin","urlForResourceNamed","imageData","guid","NSProcessInfo","processInfo","globallyUniqueString","mkdirSync","writeFileSync","undefined"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sDAAsD;AACrF,mCAAmC,0DAA0D;AAC7F,6BAA6B,mDAAmD;AAChF,wBAAwB,eAAe;AACvC,wBAAwB,iDAAiD;AACzE,0BAA0B,gDAAgD;AAC1E,gCAAgC,sDAAsD;AACtF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtWA;AACA,cAAc,mBAAO,CAAC,yDAAW;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;;;;;;;;;;;;ACFA;AACA,qBAAqB,mBAAO,CAAC,qEAAiB;;AAE9C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,cAAc,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Da;;AAEb;AACA;AACA,CAAC;AACD;AACA;;AAEA,eAAe,mBAAO,CAAC,qEAAc;;AAErC;;AAEA;AACA;;AAEA,6EAA6E,YAAY;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7Da;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA,kCAAkC,qCAAqC;;AAEvE;AACA;AACA,4CAA4C,sCAAsC,GAAG,YAAY;AACjG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ,YAAY,WAAW;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,8GAA8G,YAAY,GAAG,YAAY,GAAG,aAAa,IAAI,UAAU,WAAW,GAAG;AACrL;AACA,8GAA8G,YAAY,GAAG,YAAY,GAAG,YAAY,IAAI,UAAU,WAAW,GAAG;;AAEpL;AACA,wCAAwC,gCAAgC,E;;;;;;;;;;;;ACvGxE,gEAAa;;AAEb;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,kBAAkB;AAC/B;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;;;;;;;;;;;;;AClQA;AACA,iBAAiB,mBAAO,CAAC,wEAAmB;;AAE5C;AACA;AACA;AACA,WAAW,mBAAO,CAAC,sBAAQ;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,qDAAqD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,yBAAyB,cAAc;AACvC,4BAA4B,aAAa;AACzC,yBAAyB,kCAAkC;AAC3D,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"DataProvider.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/DataProvider.js\");\n","// TODO: async. Should probably be done with NSFileHandle and some notifications\n// TODO: file descriptor. Needs to be done with NSFileHandle\nvar Buffer = require('buffer').Buffer\n\nvar ERROR_MESSAGES = {\n  '-2': 'no such file or directory',\n  '-13': 'permission denied',\n  '-21': 'illegal operation on a directory'\n}\n\nfunction fsError(options) {\n  var error = new Error(\n    options.code + ': '\n    + ERROR_MESSAGES[options.errno] + ', '\n    + options.syscall\n    + (options.path ? ' \\'' + options.path + '\\'' : '')\n  )\n\n  Object.keys(options).forEach(function (k) {\n    error[k] = options[k]\n  })\n\n  return error\n}\n\nfunction encodingFromOptions(options, defaultValue) {\n  return options && options.encoding\n    ? String(options.encoding)\n    : (\n      options\n        ? String(options)\n        : defaultValue\n    )\n}\n\nmodule.exports.constants = {\n  F_OK: 0,\n  R_OK: 4,\n  W_OK: 2,\n  X_OK: 1\n}\n\nmodule.exports.accessSync = function(path, mode) {\n  mode = mode | 0\n  var fileManager = NSFileManager.defaultManager()\n\n  switch (mode) {\n    case 0:\n      canAccess = module.exports.existsSync(path)\n      break\n    case 1:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n    case 2:\n      canAccess = Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 3:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 4:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path)))\n      break\n    case 5:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n    case 6:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path)))\n      break\n    case 7:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path))) && Boolean(Number(fileManager.isWritableFileAtPath(path))) && Boolean(Number(fileManager.isExecutableFileAtPath(path)))\n      break\n  }\n\n  if (!canAccess) {\n    throw new Error('Can\\'t access ' + String(path))\n  }\n}\n\nmodule.exports.appendFileSync = function(file, data, options) {\n  if (!module.exports.existsSync(file)) {\n    return module.exports.writeFileSync(file, data, options)\n  }\n\n  var handle = NSFileHandle.fileHandleForWritingAtPath(file)\n  handle.seekToEndOfFile()\n\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding).toNSData()\n\n  handle.writeData(nsdata)\n}\n\nmodule.exports.chmodSync = function(path, mode) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.setAttributes_ofItemAtPath_error({\n    NSFilePosixPermissions: mode\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.copyFileSync = function(path, dest, flags) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.copyItemAtPath_toPath_error(path, dest, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.existsSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  return Boolean(Number(fileManager.fileExistsAtPath(path)))\n}\n\nmodule.exports.linkSync = function(existingPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.linkItemAtPath_toPath_error(existingPath, newPath, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdirSync = function(path, mode) {\n  mode = mode || 0o777\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(path, false, {\n    NSFilePosixPermissions: mode\n  }, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdtempSync = function(path) {\n  function makeid() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 6; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n  var tempPath = path + makeid()\n  module.exports.mkdirSync(tempPath)\n  return tempPath\n}\n\nmodule.exports.readdirSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  var paths = fileManager.subpathsAtPath(path)\n  var arr = []\n  for (var i = 0; i < paths.length; i++) {\n    arr.push(String(paths[i]))\n  }\n  return arr\n}\n\nmodule.exports.readFileSync = function(path, options) {\n  var encoding = encodingFromOptions(options, 'buffer')\n  var fileManager = NSFileManager.defaultManager()\n  var data = fileManager.contentsAtPath(path)\n  if (!data) {\n    var doesExist = fileManager.fileExistsAtPath(path)\n    if (!doesExist) {\n      throw fsError({\n        errno: -2,\n        code: 'ENOENT',\n        syscall: 'open',\n        path: path\n      })\n    }\n    var isReadable = fileManager.isReadableFileAtPath(path)\n    if (!isReadable) {\n      throw fsError({\n        errno: -13,\n        code: 'EACCES',\n        syscall: 'open',\n        path: path\n      })\n    }\n    var isDirectory = fileManager.fileExistsAtPath_isDirectory(path, true)\n    if (isDirectory) {\n      throw fsError({\n        errno: -21,\n        code: 'EISDIR',\n        syscall: 'read'\n      })\n    }\n    throw new Error('Unknown error while reading file ' + path)\n  }\n\n  var buffer = Buffer.from(data)\n\n  if (encoding === 'buffer') {\n    return buffer\n  } else if (encoding === 'NSData') {\n    return buffer.toNSData()\n  } else {\n    return buffer.toString(encoding)\n  }\n}\n\nmodule.exports.readlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.destinationOfSymbolicLinkAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return String(result)\n}\n\nmodule.exports.realpathSync = function(path) {\n  return String(NSString.stringByResolvingSymlinksInPath(path))\n}\n\nmodule.exports.renameSync = function(oldPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.moveItemAtPath_toPath_error(oldPath, newPath, err)\n\n  var error = err.value()\n\n  if (error !== null) {\n    // if there is already a file, we need to overwrite it\n    if (String(error.domain()) === 'NSCocoaErrorDomain' && Number(error.code()) === 516) {\n      var err2 = MOPointer.alloc().init()\n      fileManager.replaceItemAtURL_withItemAtURL_backupItemName_options_resultingItemURL_error(NSURL.fileURLWithPath(newPath), NSURL.fileURLWithPath(oldPath), null, NSFileManagerItemReplacementUsingNewMetadataOnly, null, err2)\n      if (err2.value() !== null) {\n        throw new Error(err2.value())\n      }\n    } else {\n      throw new Error(error)\n    }\n  }\n}\n\nmodule.exports.rmdirSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nfunction parseStat(result) {\n  return {\n    dev: String(result.NSFileDeviceIdentifier),\n    // ino: 48064969, The file system specific \"Inode\" number for the file.\n    mode: result.NSFileType | result.NSFilePosixPermissions,\n    nlink: Number(result.NSFileReferenceCount),\n    uid: String(result.NSFileOwnerAccountID),\n    gid: String(result.NSFileGroupOwnerAccountID),\n    // rdev: 0, A numeric device identifier if the file is considered \"special\".\n    size: Number(result.NSFileSize),\n    // blksize: 4096, The file system block size for i/o operations.\n    // blocks: 8, The number of blocks allocated for this file.\n    atimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    mtimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    ctimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    birthtimeMs: Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000,\n    atime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5), // the 0.5 comes from the node source. Not sure why it's added but in doubt...\n    mtime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    ctime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    birthtime: new Date(Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    isBlockDevice: function() { return result.NSFileType === NSFileTypeBlockSpecial },\n    isCharacterDevice: function() { return result.NSFileType === NSFileTypeCharacterSpecial },\n    isDirectory: function() { return result.NSFileType === NSFileTypeDirectory },\n    isFIFO: function() { return false },\n    isFile: function() { return result.NSFileType === NSFileTypeRegular },\n    isSocket: function() { return result.NSFileType === NSFileTypeSocket },\n    isSymbolicLink: function() { return result.NSFileType === NSFileTypeSymbolicLink },\n  }\n}\n\nmodule.exports.lstatSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.attributesOfItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return parseStat(result)\n}\n\n// the only difference with lstat is that we resolve symlinks\n//\n// > lstat() is identical to stat(), except that if pathname is a symbolic\n// > link, then it returns information about the link itself, not the file\n// > that it refers to.\n// http://man7.org/linux/man-pages/man2/lstat.2.html\nmodule.exports.statSync = function(path) {\n  return module.exports.lstatSync(module.exports.realpathSync(path))\n}\n\nmodule.exports.symlinkSync = function(target, path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.createSymbolicLinkAtPath_withDestinationPath_error(path, target, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.truncateSync = function(path, len) {\n  var hFile = NSFileHandle.fileHandleForUpdatingAtPath(sFilePath)\n  hFile.truncateFileAtOffset(len || 0)\n  hFile.closeFile()\n}\n\nmodule.exports.unlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.utimesSync = function(path, aTime, mTime) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.setAttributes_ofItemAtPath_error({\n    NSFileModificationDate: aTime\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.writeFileSync = function(path, data, options) {\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(\n    data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding\n  ).toNSData()\n\n  nsdata.writeToFile_atomically(path, true)\n}\n","/* globals coscript, sketch */\nvar timeout = require('./timeout')\n\nfunction setImmediate(func, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10) {\n  return timeout.setTimeout(func, 0, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)\n}\n\nfunction clearImmediate(id) {\n  return timeout.clearTimeout(id)\n}\n\nmodule.exports = {\n  setImmediate: setImmediate,\n  clearImmediate: clearImmediate\n}\n","module.exports = function () {\n  return typeof coscript !== 'undefined' && coscript.createFiber\n}\n","/* globals coscript, sketch */\nvar fiberAvailable = require('./test-if-fiber')\n\nvar setTimeout\nvar clearTimeout\n\nvar fibers = []\n\nif (fiberAvailable()) {\n  var fibers = []\n\n  setTimeout = function (func, delay, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10) {\n    // fibers takes care of keeping coscript around\n    var id = fibers.length\n    fibers.push(coscript.scheduleWithInterval_jsFunction(\n      (delay || 0) / 1000,\n      function () {\n        func(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)\n      }\n    ))\n    return id\n  }\n\n  clearTimeout = function (id) {\n    var timeout = fibers[id]\n    if (timeout) {\n      timeout.cancel() // fibers takes care of keeping coscript around\n      fibers[id] = undefined // garbage collect the fiber\n    }\n  }\n} else {\n  setTimeout = function (func, delay, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10) {\n    coscript.shouldKeepAround = true\n    var id = fibers.length\n    fibers.push(true)\n    coscript.scheduleWithInterval_jsFunction(\n      (delay || 0) / 1000,\n      function () {\n        if (fibers[id]) { // if not cleared\n          func(param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)\n        }\n        clearTimeout(id)\n        if (fibers.every(function (_id) { return !_id })) { // if everything is cleared\n          coscript.shouldKeepAround = false\n        }\n      }\n    )\n    return id\n  }\n\n  clearTimeout = function (id) {\n    fibers[id] = false\n  }\n}\n\nmodule.exports = {\n  setTimeout: setTimeout,\n  clearTimeout: clearTimeout\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuperCall = undefined;\nexports.default = ObjCClass;\n\nvar _runtime = require(\"./runtime.js\");\n\nexports.SuperCall = _runtime.SuperCall;\n\n// super when returnType is id and args are void\n// id objc_msgSendSuper(struct objc_super *super, SEL op, void)\n\nconst SuperInit = (0, _runtime.SuperCall)(NSStringFromSelector(\"init\"), [], { type: \"@\" });\n\n// Returns a real ObjC class. No need to use new.\nfunction ObjCClass(defn) {\n  const superclass = defn.superclass || NSObject;\n  const className = (defn.className || defn.classname || \"ObjCClass\") + NSUUID.UUID().UUIDString();\n  const reserved = new Set(['className', 'classname', 'superclass']);\n  var cls = MOClassDescription.allocateDescriptionForClassWithName_superclass_(className, superclass);\n  // Add each handler to the class description\n  const ivars = [];\n  for (var key in defn) {\n    const v = defn[key];\n    if (typeof v == 'function' && key !== 'init') {\n      var selector = NSSelectorFromString(key);\n      cls.addInstanceMethodWithSelector_function_(selector, v);\n    } else if (!reserved.has(key)) {\n      ivars.push(key);\n      cls.addInstanceVariableWithName_typeEncoding(key, \"@\");\n    }\n  }\n\n  cls.addInstanceMethodWithSelector_function_(NSSelectorFromString('init'), function () {\n    const self = SuperInit.call(this);\n    ivars.map(name => {\n      Object.defineProperty(self, name, {\n        get() {\n          return getIvar(self, name);\n        },\n        set(v) {\n          (0, _runtime.object_setInstanceVariable)(self, name, v);\n        }\n      });\n      self[name] = defn[name];\n    });\n    // If there is a passsed-in init funciton, call it now.\n    if (typeof defn.init == 'function') defn.init.call(this);\n    return self;\n  });\n\n  return cls.registerClass();\n};\n\nfunction getIvar(obj, name) {\n  const retPtr = MOPointer.new();\n  (0, _runtime.object_getInstanceVariable)(obj, name, retPtr);\n  return retPtr.value().retain().autorelease();\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuperCall = SuperCall;\nexports.CFunc = CFunc;\nconst objc_super_typeEncoding = '{objc_super=\"receiver\"@\"super_class\"#}';\n\n// You can store this to call your function. this must be bound to the current instance.\nfunction SuperCall(selector, argTypes, returnType) {\n  const func = CFunc(\"objc_msgSendSuper\", [{ type: '^' + objc_super_typeEncoding }, { type: \":\" }, ...argTypes], returnType);\n  return function (...args) {\n    const struct = make_objc_super(this, this.superclass());\n    const structPtr = MOPointer.alloc().initWithValue_(struct);\n    return func(structPtr, selector, ...args);\n  };\n}\n\n// Recursively create a MOStruct\nfunction makeStruct(def) {\n  if (typeof def !== 'object' || Object.keys(def).length == 0) {\n    return def;\n  }\n  const name = Object.keys(def)[0];\n  const values = def[name];\n\n  const structure = MOStruct.structureWithName_memberNames_runtime(name, Object.keys(values), Mocha.sharedRuntime());\n\n  Object.keys(values).map(member => {\n    structure[member] = makeStruct(values[member]);\n  });\n\n  return structure;\n}\n\nfunction make_objc_super(self, cls) {\n  return makeStruct({\n    objc_super: {\n      receiver: self,\n      super_class: cls\n    }\n  });\n}\n\n// Due to particularities of the JS bridge, we can't call into MOBridgeSupport objects directly\n// But, we can ask key value coding to do the dirty work for us ;)\nfunction setKeys(o, d) {\n  const funcDict = NSMutableDictionary.dictionary();\n  funcDict.o = o;\n  Object.keys(d).map(k => funcDict.setValue_forKeyPath(d[k], \"o.\" + k));\n}\n\n// Use any C function, not just ones with BridgeSupport\nfunction CFunc(name, args, retVal) {\n  function makeArgument(a) {\n    if (!a) return null;\n    const arg = MOBridgeSupportArgument.alloc().init();\n    setKeys(arg, {\n      type64: a.type\n    });\n    return arg;\n  }\n  const func = MOBridgeSupportFunction.alloc().init();\n  setKeys(func, {\n    name: name,\n    arguments: args.map(makeArgument),\n    returnValue: makeArgument(retVal)\n  });\n  return func;\n}\n\n/*\n@encode(char*) = \"*\"\n@encode(id) = \"@\"\n@encode(Class) = \"#\"\n@encode(void*) = \"^v\"\n@encode(CGRect) = \"{CGRect={CGPoint=dd}{CGSize=dd}}\"\n@encode(SEL) = \":\"\n*/\n\nfunction addStructToBridgeSupport(key, structDef) {\n  // OK, so this is probably the nastiest hack in this file.\n  // We go modify MOBridgeSupportController behind its back and use kvc to add our own definition\n  // There isn't another API for this though. So the only other way would be to make a real bridgesupport file.\n  const symbols = MOBridgeSupportController.sharedController().valueForKey('symbols');\n  if (!symbols) throw Error(\"Something has changed within bridge support so we can't add our definitions\");\n  // If someone already added this definition, don't re-register it.\n  if (symbols[key] !== null) return;\n  const def = MOBridgeSupportStruct.alloc().init();\n  setKeys(def, {\n    name: key,\n    type: structDef.type\n  });\n  symbols[key] = def;\n};\n\n// This assumes the ivar is an object type. Return value is pretty useless.\nconst object_getInstanceVariable = exports.object_getInstanceVariable = CFunc(\"object_getInstanceVariable\", [{ type: \"@\" }, { type: '*' }, { type: \"^@\" }], { type: \"^{objc_ivar=}\" });\n// Again, ivar is of object type\nconst object_setInstanceVariable = exports.object_setInstanceVariable = CFunc(\"object_setInstanceVariable\", [{ type: \"@\" }, { type: '*' }, { type: \"@\" }], { type: \"^{objc_ivar=}\" });\n\n// We need Mocha to understand what an objc_super is so we can use it as a function argument\naddStructToBridgeSupport('objc_super', { type: objc_super_typeEncoding });","'use strict';\n\n/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = finallyConstructor;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nmodule.exports = Promise;\n","/* globals NSJSONSerialization NSJSONWritingPrettyPrinted NSDictionary NSHTTPURLResponse NSString NSASCIIStringEncoding NSUTF8StringEncoding coscript NSURL NSMutableURLRequest NSMutableData NSURLConnection */\nvar _ObjCClass = require('cocoascript-class')\n\nvar ObjCClass = _ObjCClass.default\nvar Buffer\ntry {\n  Buffer = require('buffer').Buffer\n} catch (err) {}\n\nfunction response (httpResponse, data) {\n  var keys = []\n  var all = []\n  var headers = {}\n  var header\n\n  for (var i = 0; i < httpResponse.allHeaderFields().allKeys().length; i++) {\n    var key = httpResponse.allHeaderFields().allKeys()[i].toLowerCase()\n    var value = String(httpResponse.allHeaderFields()[key])\n    keys.push(key)\n    all.push([key, value])\n    header = headers[key]\n    headers[key] = header ? (header + ',' + value) : value\n  }\n\n  return {\n    ok: (httpResponse.statusCode() / 200 | 0) == 1, // 200-399\n    status: Number(httpResponse.statusCode()),\n    statusText: NSHTTPURLResponse.localizedStringForStatusCode(httpResponse.statusCode()),\n    useFinalURL: true,\n    url: String(httpResponse.URL().absoluteString()),\n    clone: response.bind(this, httpResponse, data),\n    text: function () {\n      return new Promise(function (resolve, reject) {\n        const str = NSString.alloc().initWithData_encoding(data, NSASCIIStringEncoding)\n        if (str) {\n          resolve(str)\n        } else {\n          reject(new Error(\"Couldn't parse body\"))\n        }\n      })\n    },\n    json: function () {\n      return new Promise(function (resolve, reject) {\n        var str = NSString.alloc().initWithData_encoding(data, NSUTF8StringEncoding)\n        if (str) {\n          // parse errors are turned into exceptions, which cause promise to be rejected\n          var obj = JSON.parse(str)\n          resolve(obj)\n        } else {\n          reject(new Error('Could not parse JSON because it is not valid UTF-8 data.'))\n        }\n      })\n    },\n    blob: function () {\n      return Promise.resolve(data)\n    },\n    arrayBuffer: function() {\n      return Promise.resolve(Buffer.from(data))\n    },\n    headers: {\n      keys: function () { return keys },\n      entries: function () { return all },\n      get: function (n) { return headers[n.toLowerCase()] },\n      has: function (n) { return n.toLowerCase() in headers }\n    }\n  }\n}\n\n// We create one ObjC class for ourselves here\nvar DelegateClass\n\nfunction fetch (urlString, options) {\n  options = options || {}\n  var fiber\n  try {\n    fiber = coscript.createFiber()\n  } catch (err) {\n    coscript.shouldKeepAround = true\n  }\n  return new Promise(function (resolve, reject) {\n    var url = NSURL.alloc().initWithString(urlString)\n    var request = NSMutableURLRequest.requestWithURL(url)\n    request.setHTTPMethod(options.method || 'GET')\n\n    Object.keys(options.headers || {}).forEach(function (i) {\n      request.setValue_forHTTPHeaderField(options.headers[i], i)\n    })\n\n    if (options.body) {\n      var data\n      if (typeof options.body === 'string') {\n        var str = NSString.alloc().initWithString(options.body)\n        data = str.dataUsingEncoding(NSUTF8StringEncoding)\n      } else if (Buffer && Buffer.isBuffer(options.body)) {\n        data = options.body.toNSData()\n      } else if (options.body.isKindOfClass && (options.body.isKindOfClass(NSData) == 1) ) {\n        data = options.body\n      } else if (options.body._isFormData) {\n        var boundary = options.body._boundary\n        data = options.body._data\n        data.appendData(\n          NSString.alloc()\n            .initWithString(\"--\" + boundary + \"--\\r\\n\")\n            .dataUsingEncoding(NSUTF8StringEncoding)\n        )\n        request.setValue_forHTTPHeaderField('multipart/form-data; boundary=' + boundary, 'Content-Type')\n      } else {\n        var error\n        data = NSJSONSerialization.dataWithJSONObject_options_error(options.body, NSJSONWritingPrettyPrinted, error)\n        if (error != null) {\n          return reject(error)\n        }\n        request.setValue_forHTTPHeaderField('' + data.length(), 'Content-Length')\n      }\n      request.setHTTPBody(data)\n    }\n\n    if (options.cache) {\n      switch (options.cache) {\n        case 'reload':\n        case 'no-cache':\n        case 'no-store': {\n          request.setCachePolicy(1) // NSURLRequestReloadIgnoringLocalCacheData\n        }\n        case 'force-cache': {\n          request.setCachePolicy(2) // NSURLRequestReturnCacheDataElseLoad\n        }\n        case 'only-if-cached': {\n          request.setCachePolicy(3) // NSURLRequestReturnCacheDataElseLoad\n        }\n      }\n    }\n\n\n    if (!options.credentials) {\n      request.setHTTPShouldHandleCookies(false)\n    }\n\n    if (!DelegateClass) {\n      DelegateClass = ObjCClass({\n        classname: 'FetchPolyfillDelegate',\n        data: null,\n        httpResponse: null,\n        fiber: null,\n        callbacks: null,\n\n        'connectionDidFinishLoading:': function (connection) {\n          this.callbacks.succeed(this.httpResponse, this.data)\n          if (this.fiber) {\n            this.fiber.cleanup()\n          } else {\n            coscript.shouldKeepAround = false\n          }\n        },\n        'connection:didReceiveResponse:': function (connection, httpResponse) {\n          this.httpResponse = httpResponse\n          this.data = NSMutableData.alloc().init()\n        },\n        'connection:didFailWithError:': function (connection, error) {\n          this.callbacks.fail(error)\n          if (this.fiber) {\n            this.fiber.cleanup()\n          } else {\n            coscript.shouldKeepAround = false\n          }\n        },\n        'connection:didReceiveData:': function (connection, data) {\n          this.data.appendData(data)\n        }\n      })\n    }\n\n    var finished = false\n\n    function succeed(res, data) {\n      finished = true\n      resolve(response(res, data))\n    }\n\n    function fail(err) {\n      finished = true\n      reject(err)\n    }\n\n    var connectionDelegate = DelegateClass.new()\n    connectionDelegate.callbacks = NSDictionary.dictionaryWithDictionary({\n      succeed: succeed,\n      fail: fail,\n    })\n    connectionDelegate.fiber = fiber;\n\n    var connection = NSURLConnection.alloc().initWithRequest_delegate(\n      request,\n      connectionDelegate\n    )\n\n    if (fiber) {\n      fiber.onCleanup(function () {\n        if (!finished) {\n          connection.cancel()\n        }\n      })\n    }\n\n  })\n}\n\nmodule.exports = fetch\n","const os = require('os')\nconst path = require('path')\nconst util = require('util')\nconst fs = require('@skpm/fs')\nconst sketch = require('sketch')\n\nconst API_KEY = 'bfd993ac8c14516588069b3fc664b216d0e20fb9b9fa35aa06fcc3ba6e0bc703'\nconst API_ENDPOINT = 'https://api.unsplash.com'\nconst collectionId = 317099 // Unsplash's curated collection\nconst apiOptions = {\n  'headers': {\n    'app-pragma': 'no-cache'\n  }\n}\n\nconst { DataSupplier, UI, Settings } = sketch\n\nconst SETTING_KEY = 'unsplash.photo.id'\nconst FOLDER = path.join(os.tmpdir(), 'com.sketchapp.unsplash-plugin')\n\nexport function onStartup () {\n  DataSupplier.registerDataSupplier('public.image', 'Random Photo', 'SupplyRandomPhoto')\n  DataSupplier.registerDataSupplier('public.image', 'Search Photo…', 'SearchPhoto')\n}\n\nexport function onShutdown () {\n  DataSupplier.deregisterDataSuppliers()\n  try {\n    if (fs.existsSync(FOLDER)) {\n      fs.rmdirSync(FOLDER)\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport function onSupplyRandomPhoto (context) {\n  setImageForContext(context)\n}\n\nfunction containsPhotoId (searchTerm) {\n  return searchTerm.substr(0, 3) === 'id:' || searchTerm.indexOf('unsplash.com/photos/') !== -1\n}\n\nfunction extractPhotoId (searchTerm) {\n  if (searchTerm.substr(0, 3) === 'id:') {\n    return searchTerm.substr(3)\n  }\n\n  // Extract photoId from a \"unsplash.com/photos/<photoId>\" URL\n  // Allows a URL with or without http/https\n  // It also strips out anything after the photoId\n  let photoId = searchTerm.substr(searchTerm.indexOf('unsplash.com/photos/') + 20)\n  const artifactLocation = photoId.search(/[^a-z0-9_-]/i)\n  return artifactLocation !== -1 ? photoId.substr(0, artifactLocation) : photoId\n}\n\nexport function onSearchPhoto (context) {\n  const searchTerm = UI.getStringFromUser('Search Unsplash for…', 'People').trim()\n  if (searchTerm !== 'null') {\n    if (containsPhotoId(searchTerm)) {\n      setImageForContext(context, null, extractPhotoId(searchTerm))\n    } else {\n      setImageForContext(context, searchTerm.replace(/\\s+/g, '-').toLowerCase())\n    }\n  }\n}\n\nexport default function onImageDetails () {\n  const selectedDocument = sketch.getSelectedDocument()\n  const selection = selectedDocument ? selectedDocument.selectedLayers : []\n  if (selection.length > 0) {\n    selection.forEach(element => {\n      const id = Settings.layerSettingForKey(element, SETTING_KEY) || (\n        element.type === 'SymbolInstance' &&\n        element.overrides\n          .map(o => Settings.layerSettingForKey(o, SETTING_KEY))\n          .find(s => !!s)\n      )\n      if (id) {\n        NSWorkspace.sharedWorkspace().openURL(NSURL.URLWithString(`https://unsplash.com/photos/${id}`))\n      } else {\n        // This layer doesn't have an Unsplash photo set, do nothing.\n        // Alternatively, show an explanation of what the user needs to do to make this work…\n        UI.message(`To get a random photo, click Data › Unsplash Random Photo in the toolbar, or right click the layer › Data Feeds › Unsplash Random Photo`)\n      }\n    })\n  } else {\n    UI.message(`Please select at least one layer`)\n  }\n}\n\nfunction setImageForContext (context, ...params) {\n  const dataKey = context.data.key\n  const items = util.toArray(context.data.items).map(sketch.fromNative)\n  items.forEach((item, index) => setImageFor(item, index, dataKey, ...params))\n}\n\nfunction setImageFor (item, index, dataKey, searchTerm, photoId) {\n  let layer\n  if (!item.type) {\n    // if we get an unknown item, it means that we have a layer that is not yet\n    // recognized by the API (probably an MSOvalShape or something)\n    // force cast it to a Shape\n    item = sketch.Shape.fromNative(item.sketchObject)\n  }\n  if (item.type === 'DataOverride') {\n    layer = item.symbolInstance // or item.override.affectedLayer, but both of them are not really what we need… Check `MSOverrideRepresentation` to get the true size of the affected layer after being resized on the Symbol instance\n  } else {\n    layer = item\n  }\n\n  let orientation\n  if (layer.frame.width > layer.frame.height) {\n    orientation = 'landscape'\n  }\n  if (layer.frame.width < layer.frame.height) {\n    orientation = 'portrait'\n  }\n  if (layer.frame.width === layer.frame.height) {\n    orientation = 'squarish'\n  }\n\n  let action = photoId ? `/photos/${photoId}` : '/photos/random'\n  let url = API_ENDPOINT + action + '?client_id=' + API_KEY + '&count=1&orientation=' + orientation\n  if (!photoId) {\n    if (searchTerm) {\n      url += '&query=' + searchTerm\n    } else {\n      url += '&collections=' + collectionId\n    }\n  }\n\n  UI.message('🕑 Downloading…')\n  fetch(url, apiOptions)\n    .then(response => response.json())\n    .then(json => {\n      if (json.errors) {\n        return Promise.reject(json.errors[0])\n      } else if (typeof json.id !== 'undefined') {\n        return json\n      } else {\n        return json[0]\n      }\n    })\n    .then(json => process(json, dataKey, index, item))\n    .catch(e => {\n      UI.message(e)\n      console.error(e)\n    })\n}\n\nfunction process (data, dataKey, index, item) {\n  // supply the data\n  return getImageFromURL(data.urls.regular).then(imagePath => {\n    if (!imagePath) {\n      // TODO: something wrong happened, show something to the user\n      return\n    }\n    DataSupplier.supplyDataAtIndex(dataKey, imagePath, index)\n\n    // store where the image comes from, but only if this is a regular layer\n    if (item.type !== 'DataOverride') {\n      Settings.setLayerSettingForKey(item, SETTING_KEY, data.id)\n    }\n\n    // show the name of the photographer\n    let downloadLocation = data.links.download_location + '?client_id=' + API_KEY\n    return fetch(downloadLocation, apiOptions)\n      .then(UI.message('📷 by ' + data.user.name + ' on Unsplash'))\n  })\n}\n\nfunction getImageFromURL (url) {\n  return fetch(url)\n    .then(res => res.blob())\n    // TODO: use imageData directly, once #19391 is implemented\n    .then(saveTempFileFromImageData)\n    .catch((err) => {\n      console.error(err)\n      return context.plugin.urlForResourceNamed('placeholder.png').path()\n    })\n}\n\nfunction saveTempFileFromImageData (imageData) {\n  const guid = NSProcessInfo.processInfo().globallyUniqueString()\n  const imagePath = path.join(FOLDER, `${guid}.jpg`)\n  try {\n    fs.mkdirSync(FOLDER)\n  } catch (err) {\n    // probably because the folder already exists\n    // TODO: check that it is really because it already exists\n  }\n  try {\n    fs.writeFileSync(imagePath, imageData, 'NSData')\n    return imagePath\n  } catch (err) {\n    console.error(err)\n    return undefined\n  }\n}\n","module.exports = require(\"buffer\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"sketch\");","module.exports = require(\"util\");"],"sourceRoot":""}